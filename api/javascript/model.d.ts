// generated by Proto2Typescript. do not touch!

declare module org.roylance.yaas {
	interface ProtoBufModel {
		toArrayBuffer(): ArrayBuffer;
		//toBuffer(): NodeBuffer;
		//encode(): ByteBuffer;
		toBase64(): string;
		toString(): string;
	}

	export interface ProtoBufBuilder {
		UserDevice: UserDeviceBuilder;
		Image: ImageBuilder;
		User: UserBuilder;
		Token: TokenBuilder;
		UIAuthentication: UIAuthenticationBuilder;
		UIChangePassword: UIChangePasswordBuilder;
		UIRequest: UIRequestBuilder;
		UIResponse: UIResponseBuilder;
		UIAuthentications: UIAuthenticationsBuilder;
		UserDeviceType: UserDeviceType;
		UserRole: UserRole;
		
	}
}

declare module org.roylance.yaas {

	export interface UserDevice extends ProtoBufModel {
		id?: string;
		getId() : string;
		setId(id : string): void;
		user_device_type?: UserDeviceType;
		getUserDeviceType() : UserDeviceType;
		setUserDeviceType(userDeviceType : UserDeviceType): void;
		user_device_token?: string;
		getUserDeviceToken() : string;
		setUserDeviceToken(userDeviceToken : string): void;
		last_updated?: number;
		getLastUpdated() : number;
		setLastUpdated(lastUpdated : number): void;
		user?: User;
		getUser() : User;
		setUser(user : User): void;
		
	}
	
	export interface UserDeviceBuilder {
		new(): UserDevice;
		decode(buffer: ArrayBuffer) : UserDevice;
		//decode(buffer: NodeBuffer) : UserDevice;
		//decode(buffer: ByteArrayBuffer) : UserDevice;
		decode64(buffer: string) : UserDevice;
		
	}	
}

declare module org.roylance.yaas {

	export interface Image extends ProtoBufModel {
		id?: string;
		getId() : string;
		setId(id : string): void;
		name?: string;
		getName() : string;
		setName(name : string): void;
		actual_image?: string;
		getActualImage() : string;
		setActualImage(actualImage : string): void;
		
	}
	
	export interface ImageBuilder {
		new(): Image;
		decode(buffer: ArrayBuffer) : Image;
		//decode(buffer: NodeBuffer) : Image;
		//decode(buffer: ByteArrayBuffer) : Image;
		decode64(buffer: string) : Image;
		
	}	
}

declare module org.roylance.yaas {

	export interface User extends ProtoBufModel {
		id?: string;
		getId() : string;
		setId(id : string): void;
		user_name?: string;
		getUserName() : string;
		setUserName(userName : string): void;
		password?: string;
		getPassword() : string;
		setPassword(password : string): void;
		display?: string;
		getDisplay() : string;
		setDisplay(display : string): void;
		first_name?: string;
		getFirstName() : string;
		setFirstName(firstName : string): void;
		last_name?: string;
		getLastName() : string;
		setLastName(lastName : string): void;
		image?: Image;
		getImage() : Image;
		setImage(image : Image): void;
		roles: UserRole[];
		getRoles() : UserRole[];
		setRoles(roles : UserRole[]): void;
		
	}
	
	export interface UserBuilder {
		new(): User;
		decode(buffer: ArrayBuffer) : User;
		//decode(buffer: NodeBuffer) : User;
		//decode(buffer: ByteArrayBuffer) : User;
		decode64(buffer: string) : User;
		
	}	
}

declare module org.roylance.yaas {

	export interface Token extends ProtoBufModel {
		id?: string;
		getId() : string;
		setId(id : string): void;
		user_id?: string;
		getUserId() : string;
		setUserId(userId : string): void;
		issued?: number;
		getIssued() : number;
		setIssued(issued : number): void;
		expiration?: number;
		getExpiration() : number;
		setExpiration(expiration : number): void;
		
	}
	
	export interface TokenBuilder {
		new(): Token;
		decode(buffer: ArrayBuffer) : Token;
		//decode(buffer: NodeBuffer) : Token;
		//decode(buffer: ByteArrayBuffer) : Token;
		decode64(buffer: string) : Token;
		
	}	
}

declare module org.roylance.yaas {

	export interface UIAuthentication extends ProtoBufModel {
		authenticated?: boolean;
		getAuthenticated() : boolean;
		setAuthenticated(authenticated : boolean): void;
		token?: string;
		getToken() : string;
		setToken(token : string): void;
		user_name?: string;
		getUserName() : string;
		setUserName(userName : string): void;
		display?: string;
		getDisplay() : string;
		setDisplay(display : string): void;
		is_admin?: boolean;
		getIsAdmin() : boolean;
		setIsAdmin(isAdmin : boolean): void;
		
	}
	
	export interface UIAuthenticationBuilder {
		new(): UIAuthentication;
		decode(buffer: ArrayBuffer) : UIAuthentication;
		//decode(buffer: NodeBuffer) : UIAuthentication;
		//decode(buffer: ByteArrayBuffer) : UIAuthentication;
		decode64(buffer: string) : UIAuthentication;
		
	}	
}

declare module org.roylance.yaas {

	export interface UIChangePassword extends ProtoBufModel {
		user_name?: string;
		getUserName() : string;
		setUserName(userName : string): void;
		old_password?: string;
		getOldPassword() : string;
		setOldPassword(oldPassword : string): void;
		new_password?: string;
		getNewPassword() : string;
		setNewPassword(newPassword : string): void;
		
	}
	
	export interface UIChangePasswordBuilder {
		new(): UIChangePassword;
		decode(buffer: ArrayBuffer) : UIChangePassword;
		//decode(buffer: NodeBuffer) : UIChangePassword;
		//decode(buffer: ByteArrayBuffer) : UIChangePassword;
		decode64(buffer: string) : UIChangePassword;
		
	}	
}

declare module org.roylance.yaas {

	export interface UIRequest extends ProtoBufModel {
		token?: string;
		getToken() : string;
		setToken(token : string): void;
		content?: string;
		getContent() : string;
		setContent(content : string): void;
		user?: User;
		getUser() : User;
		setUser(user : User): void;
		user_device?: UserDevice;
		getUserDevice() : UserDevice;
		setUserDevice(userDevice : UserDevice): void;
		image?: Image;
		getImage() : Image;
		setImage(image : Image): void;
		offset?: number;
		getOffset() : number;
		setOffset(offset : number): void;
		limit?: number;
		getLimit() : number;
		setLimit(limit : number): void;
		change_password?: UIChangePassword;
		getChangePassword() : UIChangePassword;
		setChangePassword(changePassword : UIChangePassword): void;
		
	}
	
	export interface UIRequestBuilder {
		new(): UIRequest;
		decode(buffer: ArrayBuffer) : UIRequest;
		//decode(buffer: NodeBuffer) : UIRequest;
		//decode(buffer: ByteArrayBuffer) : UIRequest;
		decode64(buffer: string) : UIRequest;
		
	}	
}

declare module org.roylance.yaas {

	export interface UIResponse extends ProtoBufModel {
		authenticated?: boolean;
		getAuthenticated() : boolean;
		setAuthenticated(authenticated : boolean): void;
		error_message?: string;
		getErrorMessage() : string;
		setErrorMessage(errorMessage : string): void;
		successful?: boolean;
		getSuccessful() : boolean;
		setSuccessful(successful : boolean): void;
		content?: string;
		getContent() : string;
		setContent(content : string): void;
		is_admin?: boolean;
		getIsAdmin() : boolean;
		setIsAdmin(isAdmin : boolean): void;
		user?: UIAuthentication;
		getUser() : UIAuthentication;
		setUser(user : UIAuthentication): void;
		users?: UIAuthentications;
		getUsers() : UIAuthentications;
		setUsers(users : UIAuthentications): void;
		user_devices: UserDevice[];
		getUserDevices() : UserDevice[];
		setUserDevices(userDevices : UserDevice[]): void;
		
	}
	
	export interface UIResponseBuilder {
		new(): UIResponse;
		decode(buffer: ArrayBuffer) : UIResponse;
		//decode(buffer: NodeBuffer) : UIResponse;
		//decode(buffer: ByteArrayBuffer) : UIResponse;
		decode64(buffer: string) : UIResponse;
		
	}	
}

declare module org.roylance.yaas {

	export interface UIAuthentications extends ProtoBufModel {
		users: UIAuthentication[];
		getUsers() : UIAuthentication[];
		setUsers(users : UIAuthentication[]): void;
		
	}
	
	export interface UIAuthenticationsBuilder {
		new(): UIAuthentications;
		decode(buffer: ArrayBuffer) : UIAuthentications;
		//decode(buffer: NodeBuffer) : UIAuthentications;
		//decode(buffer: ByteArrayBuffer) : UIAuthentications;
		decode64(buffer: string) : UIAuthentications;
		
	}	
}

declare module org.roylance.yaas {
	export const enum UserDeviceType {
		ANDROID = 0,
		IOS = 1,
		JAVASCRIPT = 2,
		
	}
}

declare module org.roylance.yaas {
	export const enum UserRole {
		NORMAL = 0,
		ADMIN = 1,
		
	}
}
